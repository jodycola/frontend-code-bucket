{"ast":null,"code":"var _jsxFileName = \"/Users/kody/code/codebucket/frontend-code-bucket/src/components/Main.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Editor from \"./Editor\";\nimport Display from \"./Display\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:3000/projects\";\n\nfunction Main({\n  darkMode,\n  selected,\n  setSelected\n}) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [html, setHtml] = useLocalStorage(\"html\", \"\");\n  const [css, setCss] = useLocalStorage(\"css\", \"\");\n  const [js, setJs] = useLocalStorage(\"js\", \"\"); // CHECKS IF SOURCE DOC NEEDS TO BE UPDATED\n  // CLEARS THE SELECTED PROJECT DATA\n\n  useEffect(() => {\n    if (selected === \"\") {\n      return true;\n    } else {\n      setHtml(selected.html);\n      setCss(selected.css);\n      setJs(selected.javascript);\n    }\n  }, [setHtml, setCss, setJs, selected]);\n  const srcDoc = `\n        <html>\n            <body>${html}</body>\n            <style>${css}</style>\n            <script defer>${js}</script>\n        </html>\n        `; // LOCAL STORAGE HOOK\n\n  function useLocalStorage(key, initialValue) {\n    _s();\n\n    const [value, setValue] = useState(() => {\n      const item = localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue; // eslint-disable-next-line\n\n      setValue(item);\n    });\n    localStorage.setItem(key, JSON.stringify(value));\n    return [value, setValue];\n  } // HANDLER FUNCTION\n\n\n  _s(useLocalStorage, \"NS/gf4B8LZEGI7R3CCJJwtV7NP8=\");\n\n  function handleSaveUpdate(html, css, js) {\n    if (selected === \"\") {\n      var projectTitle = prompt(\"Please enter a title\");\n      fetch(`${url}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          html,\n          css,\n          js,\n          projectTitle\n        })\n      }).then(response => response.json()).then(data => {\n        console.log('Success:', data);\n      });\n    } else {\n      const updatedProject = {\n        html: html,\n        css: css,\n        js: js\n      };\n      fetch(`${url}/${selected.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedProject)\n      }).then(response => response.json()).then(console.log);\n    }\n  } // CLEARS ACE-EDITORS\n\n\n  function handleClear() {\n    setHtml(\"\");\n    setCss(\"\");\n    setJs(\"\");\n    setSelected(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save-button\",\n      onClick: () => handleSaveUpdate(html, css, js),\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"clear-button\",\n      onClick: handleClear,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-panel\",\n      children: [/*#__PURE__*/_jsxDEV(Editor, {\n        mode: \"xml\",\n        language: \"HTML\",\n        value: html,\n        onChange: setHtml,\n        darkMode: darkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        mode: \"css\",\n        language: \"CSS\",\n        value: css,\n        onChange: setCss,\n        darkMode: darkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        mode: \"javascript\",\n        language: \"JAVASCRIPT\",\n        value: js,\n        onChange: setJs,\n        darkMode: darkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-panel\",\n      children: /*#__PURE__*/_jsxDEV(Display, {\n        srcDoc: srcDoc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Main, \"bUdvQFNNrFTH7jR65rGDDZDv3Ck=\", false, function () {\n  return [useLocalStorage, useLocalStorage, useLocalStorage];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/kody/code/codebucket/frontend-code-bucket/src/components/Main.js"],"names":["React","useState","useEffect","Editor","Display","url","Main","darkMode","selected","setSelected","html","setHtml","useLocalStorage","css","setCss","js","setJs","javascript","srcDoc","key","initialValue","value","setValue","item","localStorage","getItem","JSON","parse","setItem","stringify","handleSaveUpdate","projectTitle","prompt","fetch","method","headers","body","then","response","json","data","console","log","updatedProject","id","handleClear"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\n\nimport Editor from \"./Editor\"\nimport Display from \"./Display\"\n\nconst url = \"http://localhost:3000/projects\"\n\nfunction Main({ darkMode, selected, setSelected }){\n    const [html, setHtml] = useLocalStorage(\"html\", \"\")\n    const [css, setCss] = useLocalStorage(\"css\", \"\")\n    const [js, setJs] = useLocalStorage(\"js\", \"\")\n\n    // CHECKS IF SOURCE DOC NEEDS TO BE UPDATED\n    // CLEARS THE SELECTED PROJECT DATA\n    useEffect(() => {\n        if (selected === \"\") {\n            return true\n        } else {\n            setHtml(selected.html)\n            setCss(selected.css)\n            setJs(selected.javascript)\n        }\n    }, [setHtml, setCss, setJs, selected])\n\n    const srcDoc = (`\n        <html>\n            <body>${html}</body>\n            <style>${css}</style>\n            <script defer>${js}</script>\n        </html>\n        `)\n\n    // LOCAL STORAGE HOOK\n    function useLocalStorage(key, initialValue) {\n        const [value, setValue] = useState(() => {\n            const item = localStorage.getItem(key)\n            return item ? JSON.parse(item) : initialValue\n            // eslint-disable-next-line\n            setValue(item)\n        })\n        localStorage.setItem(key, JSON.stringify(value))\n        return [value, setValue]\n    }\n\n\n    // HANDLER FUNCTION\n\n    function handleSaveUpdate (html, css, js) {\n        \n        if(selected === \"\"){\n            \n            var projectTitle = prompt(\"Please enter a title\")\n            \n            fetch(`${url}`, {                \n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({html, css, js, projectTitle}),\n                })\n                .then(response => response.json())\n                .then(data => {\n                console.log('Success:', data);\n                })\n\n        } else {\n            const updatedProject = {\n                html: html,\n                css: css, \n                js: js\n            }\n            fetch(`${url}/${selected.id}`, {\n                method: \"PATCH\", \n                headers: {\n                    \"Content-Type\": \"application/json\",\n                }, \n                body: JSON.stringify(updatedProject),\n                })\n                .then(response => response.json())\n                .then(console.log)\n            }\n    }\n\n    // CLEARS ACE-EDITORS\n    function handleClear(){\n        setHtml(\"\")\n        setCss(\"\")\n        setJs(\"\")\n        setSelected(\"\")\n    }\n\n    return (\n        <div className=\"main-container\">\n            <button className=\"save-button\" onClick={() => handleSaveUpdate(html, css, js)}>\n            Save\n            </button>\n\n            <button className=\"clear-button\" onClick={handleClear}>\n            Clear\n            </button>\n\n            <div className=\"editor-panel\">\n            <Editor \n                mode=\"xml\"\n                language=\"HTML\"\n                value={html}\n                onChange={setHtml}\n                darkMode={darkMode}\n            />\n            <Editor \n                mode=\"css\"\n                language=\"CSS\"\n                value={css}\n                onChange={setCss}\n                darkMode={darkMode}\n            />\n            <Editor \n                mode=\"javascript\"\n                language=\"JAVASCRIPT\"\n                value={js}\n                onChange={setJs}\n                darkMode={darkMode}\n            />\n            </div>\n            <div className=\"display-panel\">\n    \n            <Display\n                srcDoc={srcDoc}\n            />\n            </div>\n        </div>\n    )\n}\n\nexport default Main"]},"metadata":{},"sourceType":"module"}